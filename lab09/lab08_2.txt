a. Explain:

1) the component structure of the application. What makes the UI composable and why does this matter?
	The structure is composable because it consists of only three different element types. This makes it very scalable and easy to maintain.

2) what JSX does.
	JSX makes the syntax of creating HTML elements within react easier.

3) why ReactJS is safe with respect to XSS.
	The use of remarkable converts plain strings to HTML

4) how the data flows through the components. How are comments loaded? created? saved.
	Data is gotten from the CommentBox, then passed down to the CommentList, before finally having a comment in a home.
	Comments are created fromt the comment form and a refresh starts the waterfall again.

5) the nature and purpose of props and state. Which is immutable and which is mutable and why does this distinction matter?
	Props is immutible and state is mutible. The distinction matters because with dynamic data, you want to be able to mutate it.


b. Consider the following, more detailed questions based on statements in the tutorial.

1) Try editing the comments.json file (to add or remove a legal comment). What happens and why?
	The comment is gone! Since the JSON file acts as the database, any changes to the fill will update the server.

2) When the CommentBox has loaded comments from the server (in loadCommentsFromServer()), why doesn’t it call render() to make them visible?
	The comment box doesn't actually need to rerender, just it's children, so it passes the data on.

3) Of what advantage, if any, is it to require that components always represent the current state of the view?
	It makes sure the user always sees up to date information, a key for a responsive web app.

4) The app implements optimistic updates. Isn’t optimism here more like foolishness? What if the server rejects the new comment (for whatever reason)?
	Then I believe it would dissapear when the refresh happens because it grabs the JSON from the server and sets it to the state. If the new comment
		is absent from the JSON, then it will no longer be there.
